@model WebAppYte.Models.BenhAn

@{
    ViewBag.Title = "Thêm mới bệnh án";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAd.cshtml";
}

<h2 class="text-center">THÊM MỚI BỆNH ÁN</h2>

@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger">
        @ViewBag.ErrorMessage
    </div>
}

@using (Html.BeginForm("Create", "BenhAns", FormMethod.Post, new { area = "Admin" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- Thông tin cơ bản -->
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.tieude, "Tiêu đề", htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.tieude, new { @class = "form-control", placeholder = "Nhập tiêu đề bệnh án" })
                    @Html.ValidationMessageFor(model => model.tieude, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.mabs, "Bác sĩ khám", htmlAttributes: new { @class = "control-label" })
                    @if (ViewData["bacsis"] != null && ((List<WebAppYte.Models.NguoiDung>)ViewData["bacsis"]).Count > 0)
                    {
                        @Html.DropDownListFor(model => model.mabs, new SelectList(ViewData["bacsis"] as List<WebAppYte.Models.NguoiDung>, "mand", "hoten"), "-- Chọn bác sĩ --", new { @class = "form-control" })
                    }
                    else
                    {
                        <p class="text-danger">Không có bác sĩ nào trong hệ thống</p>
                    }
                    @Html.ValidationMessageFor(model => model.mabs, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6">
                @{
                    var listBN = ViewData["benhnhans"] as List<WebAppYte.Models.BenhNhan>;
                }
                <div class="form-group">
                    @Html.LabelFor(model => model.mabn, "Bệnh nhân", htmlAttributes: new { @class = "control-label" })
                    @if (listBN != null && listBN.Count > 0)
                    {
                        @Html.DropDownListFor(model => model.mabn, new SelectList(listBN, "mabn", "tenbn"), "-- Chọn bệnh nhân --", new { @class = "form-control", @onchange = "selectedValue(this)" })
                    }
                    else
                    {
                        <p class="text-danger">Không có bệnh nhân nào trong hệ thống</p>
                    }
                    @Html.ValidationMessageFor(model => model.mabn, "", new { @class = "text-danger" })
                </div>

                <div id="patientInfo" class="border p-3 bg-light rounded">
                    <div class="form-group row">
                        <label class="col-sm-4">Họ tên:</label>
                        <div class="col-sm-8">
                            <span id="hoten">@(listBN != null && listBN.Count > 0 ? listBN[0].tenbn : "")</span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-4">Ngày sinh:</label>
                        <div class="col-sm-8">
                            <span id="ngaysinh">@(listBN != null && listBN.Count > 0 ? listBN[0].ngaysinh.Value.ToString("dd/MM/yyyy") : "")</span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-4">Địa chỉ:</label>
                        <div class="col-sm-8">
                            <span id="diachi">@(listBN != null && listBN.Count > 0 ? listBN[0].diachi : "")</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Thông tin khám bệnh -->
        <div class="card mt-3">
            <div class="card-header bg-info text-white">
                <h5>Thông tin khám bệnh</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ngaykham, "Ngày khám", htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.ngaykham, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
                            @Html.ValidationMessageFor(model => model.ngaykham, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.giokham, "Giờ khám", htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.giokham, "{0:HH\\:mm}", new { @class = "form-control", @type = "time" })
                            @Html.ValidationMessageFor(model => model.giokham, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Dấu hiệu sinh tồn -->
        <div class="card mt-3">
            <div class="card-header bg-info text-white">
                <h5>Dấu hiệu sinh tồn</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.mach, "Mạch (lần/phút)", htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.mach, new { @class = "form-control", @type = "number", min = "0", step = "1" })
                            @Html.ValidationMessageFor(model => model.mach, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.nhietdo, "Nhiệt độ (°C)", htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.nhietdo, new { @class = "form-control", @type = "number", min = "0", step = "0.1" })
                            @Html.ValidationMessageFor(model => model.nhietdo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.nhiptho, "Nhịp thở (lần/phút)", htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.nhiptho, new { @class = "form-control", @type = "number", min = "0", step = "1" })
                            @Html.ValidationMessageFor(model => model.nhiptho, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Chỉ số cơ thể -->
        <div class="card mt-3">
            <div class="card-header bg-info text-white">
                <h5>Chỉ số cơ thể</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.chieucao, "Chiều cao (m)", htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.chieucao, new { @class = "form-control", @id = "chieucao", @oninput = "onCalculateBMI()", @type = "number", min = "0", max = "3", step = "0.01" })
                            @Html.ValidationMessageFor(model => model.chieucao, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.cannang, "Cân nặng (kg)", htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.cannang, new { @class = "form-control", @id = "cannang", @oninput = "onCalculateBMI()", @type = "number", min = "0", step = "0.1" })
                            @Html.ValidationMessageFor(model => model.cannang, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.bmi, "Chỉ số BMI", htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.bmi, new { @class = "form-control", @id = "bmi", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.bmi, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Khám mắt -->
        <div class="card mt-3">
            <div class="card-header bg-info text-white">
                <h5>Khám mắt</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.thiluctrai, "Thị lực trái (10/10)", htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.thiluctrai, new { @class = "form-control", @type = "number", min = "0", max = "10", step = "0.1" })
                            @Html.ValidationMessageFor(model => model.thiluctrai, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.nhanapT, "Nhãn áp trái (mmHg)", htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.nhanapT, new { @class = "form-control", @type = "number", min = "0", step = "0.1" })
                            @Html.ValidationMessageFor(model => model.nhanapT, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.thilucphai, "Thị lực phải (10/10)", htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.thilucphai, new { @class = "form-control", @type = "number", min = "0", max = "10", step = "0.1" })
                            @Html.ValidationMessageFor(model => model.thilucphai, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.nhanapP, "Nhãn áp phải (mmHg)", htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.nhanapP, new { @class = "form-control", @type = "number", min = "0", step = "0.1" })
                            @Html.ValidationMessageFor(model => model.nhanapP, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Chuẩn đoán và điều trị -->
        <div class="card mt-3">
            <div class="card-header bg-info text-white">
                <h5>Chuẩn đoán và điều trị</h5>
            </div>
            <div class="card-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.chuandoan, "Chuẩn đoán lâm sàng", htmlAttributes: new { @class = "control-label" })
                    @Html.TextAreaFor(model => model.chuandoan, new { @class = "form-control", rows = "3", placeholder = "Nhập chuẩn đoán lâm sàng" })
                    @Html.ValidationMessageFor(model => model.chuandoan, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <!-- Nút submit -->
        <div class="form-group mt-4">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save"></i> Lưu bệnh án
                </button>
                @Html.ActionLink("Quay lại danh sách", "Index", null, new { @class = "btn btn-secondary" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>

    <script>
        $(document).ready(function () {
            // Đặt ngày mặc định là ngày hiện tại
            var today = new Date().toISOString().split('T')[0];
            $("#ngaykham").val(today);

            // Đặt giờ mặc định là giờ hiện tại
            var now = new Date();
            var hours = now.getHours().toString().padStart(2, '0');
            var minutes = now.getMinutes().toString().padStart(2, '0');
            $("#giokham").val(hours + ':' + minutes);
        });

        function onCalculateBMI() {
            var height = parseFloat($("#chieucao").val()) || 0;
            var weight = parseFloat($("#cannang").val()) || 0;

            if (height > 0 && weight > 0) {
                var bmi = weight / (height * height);
                $("#bmi").val(bmi.toFixed(1));
            } else {
                $("#bmi").val("");
            }
        }
        function onCalculateBMI() {
            // Đảm bảo luôn parse sang số
            const height = parseFloat($("#chieucao").val()) || 0;
            const weight = parseFloat($("#cannang").val()) || 0;

            // Tính toán và làm tròn 1 chữ số thập phân
            const bmi = Math.round((weight / (height * height)) * 10) / 10;

            // Gán giá trị vào input (đảm bảo dạng số, không phải string)
            $("#bmi").val(bmi);
        }

        function selectedValue(ddlObject) {
            var id = ddlObject.value;
            var obj = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewData["benhnhans"],
                           new Newtonsoft.Json.JsonSerializerSettings
                           {
                               ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Ignore
                           }));
            if (obj) {
                var benhnhan = obj.find(x => x.mabn == id);
                if (benhnhan) {
                    $("#hoten").text(benhnhan.tenbn);
                    $("#ngaysinh").text(new Date(benhnhan.ngaysinh).toLocaleDateString('vi-VN'));
                    $("#diachi").text(benhnhan.diachi);
                }
            }
        }
    </script>
}